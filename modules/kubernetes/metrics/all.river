/*
Module: metrics-all
Description: Wrapper module to include all kubernetes metric modules and use cri parsing
*/
argument "forward_to" {
  // comment = "Must be a list(MetricssReceiver) where collected logs should be forwarded to"
	optional = false
}

// cadvisor arguments
argument "cadvisor" {
  comment = "cAdvisor arguments"
  optional = true
  default = {}
}

argument "clustering" {
  comment = "Whether or not clustering should be enabled"
  optional = true
  default = false
}

argument "git_repo" {
  optional = true
  default = coalesce(env("GIT_REPO"), "https://github.com/grafana/agent-modules.git")
}

argument "git_rev" {
  optional = true
  default = coalesce(env("GIT_REV"), env("GIT_REVISION"), env("GIT_BRANCH"), "main")
}

argument "git_pull_freq" {
  optional = true
  default = "0s"
}

module.git "job_cadvisor" {
  repository = argument.git_repo.value
  revision = argument.git_rev.value
  pull_frequency = argument.git_pull_freq.value
  path = "modules/kubernetes/metrics/jobs/cadvisor.river"

  arguments {
    forward_to = argument.forward_to.value
    enabled = coalesce(argument.cadvisor.value.enabled, null)
    job_label = coalesce(argument.cadvisor.value.enabled, null)
    keep_metrics = coalesce(argument.cadvisor.value.enabled, null)
    scrape_interval = coalesce(argument.cadvisor.value.enabled, null)
    max_cache_size = coalesce(argument.cadvisor.value.enabled, null)
    clustering = argument.clustering.value
  }
}
