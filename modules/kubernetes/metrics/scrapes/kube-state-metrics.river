/*
Module: scrape-kube-state-metrics
Description: Scrapes Kube-State-Metrics, this is a separate scrape job, if you are also using annotation based scraping, you will want to explicitly
             disable kube-state-metrics from being scraped by this module and annotations by setting the following annotation on the kube-state-metrics
             metrics.agent.grafana.cmo/scrape: "false"
*/
argument "forward_to" {
  // comment = "Must be a list(MetricssReceiver) where collected logs should be forwarded to"
  optional = false
}

argument "scrape_interval" {
  // comment = "How frequently to scrape the targets of this scrape configuration."
  optional = true
  default = "60s"
}

argument "app_name" {
  // comment = "The name of the kube-state-metrics app"
  optional = true
  default = "kube-state-metrics"
}

argument "job_label" {
  // comment = "The job label to add for all kube-state-metrics, see ../relabelings/kube-state-metrics.river for the default value""
  optional = true
  default = "integrations/kubernetes/kube-state-metrics"
}

argument "keep_metrics" {
  // comment = "Regex of metrics to keep, see ../relabelings/kube-state-metrics.river for the default value"
  optional = true
  default = "(container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|container_cpu_usage_seconds_total|container_cpu_usage_seconds_total|container_fs_reads_bytes_total|container_fs_reads_total|container_fs_writes_bytes_total|container_fs_writes_total|container_memory_cache|container_memory_rss|container_memory_swap|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_packets_dropped_total|go_goroutines|kube_daemonset.*|kube_daemonset_status_current_number_scheduled|kube_daemonset_status_desired_number_scheduled|kube_daemonset_status_number_available|kube_daemonset_status_number_misscheduled|kube_daemonset_status_updated_number_scheduled|kube_deployment_metadata_generation|kube_deployment_spec_replicas|kube_deployment_status_replicas_available|kube_deployment_status_replicas_updated|kube_horizontalpodautoscaler_spec_max_replicas|kube_horizontalpodautoscaler_spec_min_replicas|kube_horizontalpodautoscaler_status_current_replicas|kube_horizontalpodautoscaler_status_desired_replicas|kube_job.*|kube_job_failed|kube_job_status_active|kube_job_status_start_time|kube_node.*|kube_node_info|kube_node_spec_taint|kube_node_status_allocatable|kube_node_status_capacity|kube_node_status_condition|kube_namespace_status_phase|kube_namespace_status_phase|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_requests|kube_pod_container_status_restarts_total|kube_pod_container_status_waiting_reason|kube_pod_container_status_waiting_reason|kube_pod_info|kube_pod_owner|kube_pod_start_time|kube_pod_status_phase|kube_pod_status_phase|kube_pod_status_phase|kube_pod_status_reason|kube_replicaset.*|kube_resourcequota|kube_statefulset.*|kubernetes_build_info|kubelet_certificate_manager_client_expiration_renew_errors|kubelet_certificate_manager_client_ttl_seconds|kubelet_certificate_manager_server_ttl_seconds|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_cgroup_manager_duration_seconds_count|kubelet_node_config_error|kubelet_node_name|kubelet_pleg_relist_duration_seconds_bucket|kubelet_pleg_relist_duration_seconds_count|kubelet_pod_start_duration_seconds_bucket|kubelet_pod_start_duration_seconds_count|kubelet_pod_worker_duration_seconds_count|kubelet_running_container_count|kubelet_running_containers|kubelet_running_pod_count|kubelet_running_pods|kubelet_server_expiration_renew_errors|kubelet_volume_stats_available_bytes|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubelet_runtime_operations_errors_total|kubelet_runtime_operations_total|machine_memory_bytes|node_cpu.*|node_filesystem.*|node_filesystem_avail_bytes|node_filesystem_size_bytes|node_memory.*|node_network_transmit_bytes_total|process_cpu_seconds_total|process_resident_memory_bytes|rest_client_requests_total|storage_operation_duration_seconds_count|storage_operation_errors_total|volume_manager_total_volumes|kube_persistentvolumeclaim_resource_requests_storage_bytes)"
}

argument "clustering" {
  // comment = "Whether or not clustering should be enabled"
  optional = true
  default = false
}

argument "git_repo" {
  optional = true
  default = coalesce(env("GIT_REPO"), "https://github.com/grafana/agent-modules.git")
}

argument "git_rev" {
  optional = true
  default = coalesce(env("GIT_REV"), env("GIT_REVISION"), env("GIT_BRANCH"), "main")
}

argument "git_pull_freq" {
  optional = true
  default = "0s"
}

// get the available endpoints
discovery.kubernetes "service" {
  role = "service"
}

discovery.relabel "kube_state_metrics" {
  targets = discovery.kubernetes.service.targets

  // endpoints get all of the service labels they are attached to, filter to just the kube-state-metrics service
  rule {
    action = "keep"
    source_labels = [
      "__meta_kubernetes_service_label_app_kubernetes_io_name",
    ]
    regex = argument.app_name.value
  }

  // set the namespace
  rule {
    action = "replace"
    source_labels = ["__meta_kubernetes_namespace"]
    target_label = "namespace"
  }

  // set the service_name
  rule {
    action = "replace"
    source_labels = ["__meta_kubernetes_service_name"]
    target_label = "service"
  }

}

prometheus.scrape "kube_state_metrics" {
  targets = discovery.relabel.kube_state_metrics.output
  forward_to = [module.git.relabelings_kube_state_metrics.exports.metric_relabelings.receiver]
  scrape_interval = argument.scrape_interval.value

  clustering {
    enabled = argument.clustering.value
  }
}

// metric relabelings
module.git "relabelings_kube_state_metrics" {
  repository = argument.git_repo.value
  revision = argument.git_rev.value
  pull_frequency = argument.git_pull_freq.value
  path = "modules/kubernetes/metrics/relabelings/kube-state-metrics.river"

  arguments {
    forward_to = argument.forward_to.value
    job_label = argument.job_label.value
    keep_metrics = argument.keep_metrics.value
  }
}
