/*
Module: scrape-kube-apiserver
Description: Scrapes Kube apiserver, most of these same metrics can come from cAdvisor use only if necessary
*/
argument "forward_to" {
  // comment = "Must be a list(MetricssReceiver) where collected logs should be forwarded to"
  optional = false
}

argument "scrape_interval" {
  // comment = "How frequently to scrape the targets of this scrape configuration."
  optional = true
  default = "60s"
}

argument "tenant" {
  // comment = "The tenant to filter logs to.  This does not have to be the tenantId, this is the value to look for in the logs.agent.grafana.com/tenant annotation, and this can be a regex."
  optional = true
  default = ".*"
}

argument "job_label" {
  optional = true
  default = "integrations/kubernetes/apiserver"
  // comment = "The job label to add for all apiserver"
}

argument "clustering" {
  // comment = "Whether or not clustering should be enabled"
  optional = true
  default = false
}

argument "git_repo" {
  optional = true
  default = coalesce(env("GIT_REPO"), "https://github.com/grafana/agent-modules.git")
}

argument "git_rev" {
  optional = true
  default = coalesce(env("GIT_REV"), env("GIT_REVISION"), env("GIT_BRANCH"), "main")
}

argument "git_pull_freq" {
  optional = true
  default = "0s"
}

// get the available endpoints
discovery.kubernetes "endpoints" {
  role = "endpoints"
}

discovery.relabel "kube_apiserver" {
  targets = discovery.kubernetes.endpoints.targets

  // only keep namespace=default, service=kubernetes, port=https
  rule {
    action = "keep"
    source_labels = [
      "__meta_kubernetes_namespace",
      "__meta_kubernetes_service_name",
      "__meta_kubernetes_endpoint_port_name",
    ]
    regex = "default;kubernetes;https"
  }

  // set the namespace
  rule {
    action = "replace"
    source_labels = ["__meta_kubernetes_namespace"]
    target_label = "namespace"
  }

  // set the service_name
  rule {
    action = "replace"
    source_labels = ["__meta_kubernetes_service_name"]
    target_label = "service"
  }

}

prometheus.scrape "kube_apiserver" {
  targets = discovery.relabel.kube_apiserver.output
  scheme = "https"
  bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"
  forward_to = [module.git.relabelings_kube_apiserver.exports.metric_relabelings.receiver]
  scrape_interval = argument.scrape_interval.value

  tls_config {
    ca_file = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    insecure_skip_verify = false
    server_name = "kubernetes"
  }

  clustering {
    enabled = argument.clustering.value
  }
}

// metric relabelings
module.git "relabelings_kube_apiserver" {
  repository = argument.git_repo.value
  revision = argument.git_rev.value
  pull_frequency = argument.git_pull_freq.value
  path = "modules/kubernetes/metrics/relabelings/kube-apiserver.river"

  arguments {
    forward_to = argument.forward_to.value
    job_label = argument.job_label.value
  }
}
