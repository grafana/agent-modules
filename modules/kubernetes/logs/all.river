// all combines all Kubernetes logging components with CRI parsing.
declare "all" {
	argument "forward_to" {
		// comment = "Must be a list(LogsReceiver) where collected logs should be forwarded to"
		optional = false
	}

	argument "tenant" {
		// comment = "The tenant to filter logs to.  This does not have to be the tenantId, this is the value to look for in the logs.agent.grafana.com/tenant annotation, and this can be a regex."
		optional = true
		default  = ".*"
	}

	argument "keep_labels" {
		// comment = "List of labels to keep before the log message is written to Loki"
		optional = true
		default  = [
			"app",
			"cluster",
			"component",
			"container",
			"deployment",
			"env",
			"filename",
			"instance",
			"job",
			"level",
			"log_type",
			"namespace",
			"region",
			"service",
			"squad",
			"team",
		]
	}

	targets.logs_from_worker "default" {
		forward_to = [formats.all.default.process.receiver]
		tenant     = argument.tenant.value
	}

	formats.all "default" {
		forward_to = [labels.log_level.default.process.receiver]
	}

	labels.log_level "default" {
		forward_to = [drops.drop_levels.deafult.process.receiver]
	}

	drops.drop_levels "default" {
		forward_to = [scrubs.all.default.process.receiver]
	}

	scrubs.all "default" {
		forward_to = [embed.embed_pods.default.process.receiver]
	}

	embed.embed_pod "default" {
		forward_to = [masks.all.default.process.receiver]
	}

	masks.all "default" {
		forward_to = [labels.normalize_filename.default.process.receiver]
	}

	labels.normalize_filename "default" {
		forward_to = [labels.keep_labels.default.process.receiver]
	}

	labels.keep_labels "default" {
		forward_to  = argument.forward_to.value
		keep_labels = argument.keep_labels.value
	}
}
